[build-system]
requires = ["uv_build>=0.8.0,<0.9"]
build-backend = "uv_build"

[project]
name = "noxer"
version = "0.1.0"
description = "simple web application"
readme = "README.md"
authors = [{ name = "Vladimir Korsakov", email = "vlkorsakov256@gmail.com" }]
requires-python = ">=3.13"
dependencies = [
  "alembic>=1.16.4",
  "dishka>=1.6.0",
  "flask>=3.1.1",
  "psycopg[c]>=3.2.9",
  "sqlalchemy>=2.0.41",
]

[dependency-groups]
test = ["basedpyright>=1.31.0", "ruff>=0.12.5"]

[project.scripts]
noxer = "noxer.bootstrap.entrypoint:main"

[tool.ruff]
fix = true
line-length = 88
target-version = "py313"
include = ["src/noxer/**/*.py", "pyproject.toml"]

[tool.ruff.lint]
select = [
  "E",     # pycodestyle errors     https://docs.astral.sh/ruff/rules/#error-e
  "W",     # pycodestyle warnings   https://docs.astral.sh/ruff/rules/#warning-w
  "C90",   # mccabe                 https://docs.astral.sh/ruff/rules/#mccabe-c90
  "N",     # pep8-naming            https://docs.astral.sh/ruff/rules/#pep8-naming-n
  "I",     # isort                  https://docs.astral.sh/ruff/rules/#isort-i
  "F",     # pyflakes               https://docs.astral.sh/ruff/rules/#pyflakes-f
  "ASYNC", # flake8-async           https://docs.astral.sh/ruff/rules/#flake8-async-async
  "C4",    # flake8-comprehensions  https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
  "B",     # flake8-bugbear         https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
  "Q",     # flake8-quotes          https://docs.astral.sh/ruff/rules/#flake8-quotes-q
  "T20",   # flake8-print           https://docs.astral.sh/ruff/rules/#flake8-print-t20
  "SIM",   # flake8-simplify        https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
  "PT",    # flake8-pytest-style    https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
  "PTH",   # flake8-use-pathlib     https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
  "RUF",   # Ruff-specific rules    https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
  "PERF",  # Perflint               https://docs.astral.sh/ruff/rules/#perflint-perf
  "UP",    # pyupgrade              https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
ignore = [
  "RUF001", # String contains ambiguous character (CYRILLIC LETTER x). Did you mean character (LATIN LETTER x)?
]

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.13"
useLibraryCodeForTypes = true

reportMissingImports = false
reportMissingTypeStubs = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportIncompatibleVariableOverride = true
reportImplicitOverride = true
reportUnusedImport = true
reportUnusedVariable = true
reportUnnecessaryIsInstance = true
reportUnnecessaryTypeIgnoreComment = true
reportUninitializedInstanceVariable = true
reportPossiblyUnboundVariable = true
reportInvalidTypeVarUse = true
reportIncompatibleMethodOverride = true
reportPrivateUsage = true

reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnknownLambdaType = false
reportCallInDefaultInitializer = true
